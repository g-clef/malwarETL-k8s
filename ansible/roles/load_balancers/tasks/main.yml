- name: Install openssl
  apt:
    name: openssl
    state: present
- name: Install net-tools
  apt:
    name: net-tools
    state: present
- name: Install haproxy
  apt:
    name: haproxy
    state: present
- name: Install curl
  apt:
    name: curl
    state: present
- name: Write the load-balancers config template
  blockinfile:
    insertafter: EOF
    path: /etc/haproxy/haproxy.cfg
    block: "{{ lookup('template', 'roles/load-balancers/templates/haproxy.j2') }}"
    marker: ""
- name: Install Load Balancer LXC profile
  community.general.lxd_profile:
    url: "{{ group_vars['all'].lxd_url }}"
    client_cert: "{{ group_vars['all'].lxd_client_cert }}"
    client_key: "{{ group_vars['all'].lxd_client_key }}"
    name: "{{ group_vars['all'].cluster_name }}-load-balancer-profile"
    description: LXC profile for load-balancers
    state: present
    config: {"limits.memory": "{{ group_vars[ 'load-balancers' ].ram_limit }}",
             "limits.cpu": "{{ group_vars[ 'load-balancers' ].cpu_limit }}",
             "security.privileged": "true",
             "security.nesting": "true",
             "limits.memory.swap": "false",
             "linux.kernel_modules": "overlay,nf_nat,ip_tables,ip6_tables,netlink_diag,br_netfilter,xt_conntrack,nf_nat,overlay,nf_conntrack,ip_vs",
             raw.lxc: |
               lxc.apparmor.profile = unconfined
               lxc.cgroup.devices.allow = a
               lxc.mount.auto=proc:rw sys:rw
               lxc.cap.drop =
    }
- name: Create & start load-balancer container
  community.general.lxd_container:
    name: inventory_hostname
    state: started
    source:
      type: image
      mode: pull
      server: https://images.linuxcontainers.org
      protocol: lxd
      alias: ubuntu/focal/amd64
    profiles: ["default", "{{ group_vars['all'].cluster_name}}-load-balancer-profile"]
    wait_for_ipv4_addresses: true
    timeout: 600